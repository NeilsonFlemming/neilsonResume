{"ast":null,"code":"var _jsxFileName = \"/Users/neilsonflemming/Documents/GitHub/neilsonResume/src/components/LazyImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyImage = ({\n  src,\n  alt,\n  className,\n  style,\n  ...props\n}) => {\n  _s();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const imgRef = useRef();\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        setIsInView(true);\n        observer.disconnect();\n      }\n    }, {\n      threshold: 0.1\n    });\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n    return () => observer.disconnect();\n  }, []);\n  const handleLoad = () => {\n    setIsLoaded(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: imgRef,\n    className: className,\n    style: style,\n    children: [isInView && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      alt: alt,\n      onLoad: handleLoad,\n      style: {\n        opacity: isLoaded ? 1 : 0,\n        transition: 'opacity 0.3s ease-in-out',\n        ...style\n      },\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), !isLoaded && isInView && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f0f0f0',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '200px',\n        ...style\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(LazyImage, \"7STQihRwUCq0eGnHwGKAY7M3ZyM=\");\n_c = LazyImage;\nexport default LazyImage;\nvar _c;\n$RefreshReg$(_c, \"LazyImage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","LazyImage","src","alt","className","style","props","_s","isLoaded","setIsLoaded","isInView","setIsInView","imgRef","observer","IntersectionObserver","entry","isIntersecting","disconnect","threshold","current","observe","handleLoad","ref","children","onLoad","opacity","transition","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","display","alignItems","justifyContent","minHeight","_c","$RefreshReg$"],"sources":["/Users/neilsonflemming/Documents/GitHub/neilsonResume/src/components/LazyImage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nconst LazyImage = ({ src, alt, className, style, ...props }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const imgRef = useRef();\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsInView(true);\n          observer.disconnect();\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, []);\n\n  const handleLoad = () => {\n    setIsLoaded(true);\n  };\n\n  return (\n    <div ref={imgRef} className={className} style={style}>\n      {isInView && (\n        <img\n          src={src}\n          alt={alt}\n          onLoad={handleLoad}\n          style={{\n            opacity: isLoaded ? 1 : 0,\n            transition: 'opacity 0.3s ease-in-out',\n            ...style\n          }}\n          {...props}\n        />\n      )}\n      {!isLoaded && isInView && (\n        <div\n          style={{\n            backgroundColor: '#f0f0f0',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            minHeight: '200px',\n            ...style\n          }}\n        >\n          Loading...\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LazyImage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,SAAS,GAAGA,CAAC;EAAEC,GAAG;EAAEC,GAAG;EAAEC,SAAS;EAAEC,KAAK;EAAE,GAAGC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMgB,MAAM,GAAGf,MAAM,CAAC,CAAC;EAEvBC,SAAS,CAAC,MAAM;IACd,MAAMe,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACX,IAAIA,KAAK,CAACC,cAAc,EAAE;QACxBL,WAAW,CAAC,IAAI,CAAC;QACjBE,QAAQ,CAACI,UAAU,CAAC,CAAC;MACvB;IACF,CAAC,EACD;MAAEC,SAAS,EAAE;IAAI,CACnB,CAAC;IAED,IAAIN,MAAM,CAACO,OAAO,EAAE;MAClBN,QAAQ,CAACO,OAAO,CAACR,MAAM,CAACO,OAAO,CAAC;IAClC;IAEA,OAAO,MAAMN,QAAQ,CAACI,UAAU,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvBZ,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACET,OAAA;IAAKsB,GAAG,EAAEV,MAAO;IAACR,SAAS,EAAEA,SAAU;IAACC,KAAK,EAAEA,KAAM;IAAAkB,QAAA,GAClDb,QAAQ,iBACPV,OAAA;MACEE,GAAG,EAAEA,GAAI;MACTC,GAAG,EAAEA,GAAI;MACTqB,MAAM,EAAEH,UAAW;MACnBhB,KAAK,EAAE;QACLoB,OAAO,EAAEjB,QAAQ,GAAG,CAAC,GAAG,CAAC;QACzBkB,UAAU,EAAE,0BAA0B;QACtC,GAAGrB;MACL,CAAE;MAAA,GACEC;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACF,EACA,CAACtB,QAAQ,IAAIE,QAAQ,iBACpBV,OAAA;MACEK,KAAK,EAAE;QACL0B,eAAe,EAAE,SAAS;QAC1BC,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,SAAS,EAAE,OAAO;QAClB,GAAG9B;MACL,CAAE;MAAAkB,QAAA,EACH;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CA1DIN,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AA4Df,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}